{"version":3,"sources":["components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx","views/Voting/helpers.ts","views/Voting/config.ts","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx"],"names":["Table","styled","table","theme","colors","text","ThemedComponent","div","Title","props","as","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","BaseLabel","label","Label","SecondaryLabel","FormError","children","color","mb","FormErrors","errors","mt","map","error","Choice","onRemove","onTextInput","useState","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","value","currentTarget","length","right","top","zIndex","variant","onClick","makeChoice","id","uniqueId","Choices","choices","t","useTranslation","hasMinimumChoices","filter","choice","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","block","onDismiss","modalIsOpen","setModalIsOpen","useGetVotingPower","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","useTheme","title","headerBackground","gradients","cardHeader","width","height","alignItems","justifyContent","size","DetailsView","EasyMde","lazy","CreateProposal","name","body","times","startDate","startTime","endDate","endTime","snapshot","state","setState","setIsLoading","fieldsState","setFieldsState","account","useWeb3React","initialBlock","useInitialBlock","push","useHistory","library","useWeb3Provider","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","isArray","startDateTimestamp","getFormErrors","handleSubmit","a","preventDefault","proposal","JSON","stringify","generatePayloadData","SnapshotCommand","PROPOSAL","payload","start","end","metadata","generateMetaData","signMessage","sig","msg","address","sendSnapshotData","data","ipfsHash","message","console","updateValue","key","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","ADMINS","includes","toLowerCase","useEffect","Container","py","Page","to","onSubmit","Layout","htmlFor","inputName","required","onTextChange","px","DatePicker","selected","placeholderText","mr","href","getBscScanLink","truncateHash","endIcon","spin","isEmpty","count","VOTE_THRESHOLD","ConnectWalletButton","isCoreProposal","author","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","CORE","ALL","filterProposalsByState","plugins","network","strategies","params","symbol","tokens","cake","decimals","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","fetch","SNAPSHOT_HUB_API","method","headers","Accept","response","ok","json","Error","error_description","getVotingPower","poolAddresses","simpleRpcProvider","getBlockNumber","blockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","getTotalFromVotes","power","parseFloat","votingPower","PROPOSALS_TO_SHOW","IPFS_GATEWAY","VotingBox","cardBorder","ModalInner","maxWidth","mediaQueries","lg","fontSize","textTransform","bold","formatNumber","textAlign","initialState","verificationHash","isActive","setVotingPower","getActivePools","eligiblePools","contractAddress","getAddress","prevVotingPower","fetchVotingPower"],"mappings":"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","file":"static/js/19.d8deb725.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n  margin-bottom: 32px;\r\n  margin-top: 32px;\r\n  width: 100%;\r\n\r\n  td,\r\n  th {\r\n    color: ${({ theme }) => theme.colors.text};\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst ThemedComponent = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n\r\n  li {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst Pre = styled.pre`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst Title = (props) => {\r\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\r\n}\r\n\r\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\r\n  h1: Title,\r\n  h2: Title,\r\n  h3: Title,\r\n  h4: Title,\r\n  h5: Title,\r\n  h6: Title,\r\n  p: (props) => {\r\n    return <Text as=\"p\" my=\"16px\" {...props} />\r\n  },\r\n  table: Table,\r\n  ol: (props) => {\r\n    return <ThemedComponent as=\"ol\" {...props} />\r\n  },\r\n  ul: (props) => {\r\n    return <ThemedComponent as=\"ul\" {...props} />\r\n  },\r\n  pre: Pre,\r\n}\r\n\r\nexport default markdownComponents\r\n","import React from 'react'\r\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\r\nimport gfm from 'remark-gfm'\r\nimport markdownComponents from './styles'\r\n\r\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\r\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\r\n}\r\n\r\nexport default ReactMarkdown\r\n","import React from 'react'\r\nimport { Box, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseLabel = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Label = styled(BaseLabel)`\r\n  font-size: 20px;\r\n`\r\n\r\nexport const SecondaryLabel = styled(BaseLabel)`\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const FormError: React.FC = ({ children }) => (\r\n  <Text color=\"failure\" mb=\"4px\">\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\r\n  return (\r\n    <Box mt=\"8px\">\r\n      {errors.map((error) => {\r\n        return <FormError key={error}>{error}</FormError>\r\n      })}\r\n    </Box>\r\n  )\r\n}\r\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\r\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\r\n\r\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\r\n  onTextInput: (value: string) => void\r\n  onRemove?: () => void\r\n}\r\n\r\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\r\n  const [isWarning, setIsWarning] = useState(false)\r\n  const [isDirty, setIsDirty] = useState(false)\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = evt.currentTarget\r\n\r\n    setIsWarning(isDirty && value.length === 0)\r\n    setIsDirty(true)\r\n    onTextInput(value)\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\" mb=\"16px\">\r\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\r\n      {onRemove && (\r\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\r\n          <IconButton variant=\"text\" onClick={onRemove}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Choice\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\r\nimport uniqueId from 'lodash/uniqueId'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Choice from './Choice'\r\n\r\nexport interface Choice {\r\n  id: string\r\n  value: string\r\n}\r\n\r\ninterface ChoicesProps {\r\n  choices: Choice[]\r\n  onChange: (newChoices: Choice[]) => void\r\n}\r\n\r\nexport const MINIMUM_CHOICES = 2\r\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\r\n\r\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\r\n  const { t } = useTranslation()\r\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\r\n\r\n  const addChoice = () => {\r\n    onChange([...choices, makeChoice()])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Choices')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {choices.map(({ id, value }, index) => {\r\n          const handleTextInput = (newValue: string) => {\r\n            const newChoices = [...choices]\r\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\r\n\r\n            newChoices[choiceIndex].value = newValue\r\n\r\n            onChange(newChoices)\r\n          }\r\n\r\n          const handleRemove = () => {\r\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\r\n          }\r\n\r\n          return (\r\n            <Choice\r\n              key={id}\r\n              scale=\"lg\"\r\n              onTextInput={handleTextInput}\r\n              placeholder={t('Input choice text')}\r\n              value={value}\r\n              onRemove={index > 1 ? handleRemove : undefined}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\r\n          {t('Add Choice')}\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Choices\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { format, parseISO, isValid } from 'date-fns'\r\nimport { MINIMUM_CHOICES } from './Choices'\r\nimport { FormState } from './types'\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n  if (!isValid(date) || !isValid(time)) {\r\n    return null\r\n  }\r\n\r\n  const dateStr = format(date, 'yyyy-MM-dd')\r\n  const timeStr = format(time, 'HH:mm:ss')\r\n\r\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\r\n}\r\n\r\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\r\n  const errors: { [key: string]: string[] } = {}\r\n\r\n  if (!name) {\r\n    errors.name = [t('%field% is required', { field: 'Title' })]\r\n  }\r\n\r\n  if (!body) {\r\n    errors.body = [t('%field% is required', { field: 'Body' })]\r\n  }\r\n\r\n  if (choices.length < MINIMUM_CHOICES) {\r\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\r\n  }\r\n\r\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\r\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\r\n    errors.choices = Array.isArray(errors.choices)\r\n      ? [...errors.choices, t('Choices must not be empty')]\r\n      : (errors.choices = [t('Choices must not be empty')])\r\n  }\r\n\r\n  if (!isValid(startDate)) {\r\n    errors.startDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(startTime)) {\r\n    errors.startTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  if (!isValid(endDate)) {\r\n    errors.endDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(endTime)) {\r\n    errors.endTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\r\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\r\n\r\n  if (endDateTimestamp < startDateTimestamp) {\r\n    errors.endDate = Array.isArray(errors.endDate)\r\n      ? [...errors.endDate, t('End date must be after the start date')]\r\n      : (errors.endDate = [t('End date must be after the start date')])\r\n  }\r\n\r\n  if (snapshot === 0) {\r\n    errors.snapshot = [t('Invalid snapshot')]\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetVotingPower from '../hooks/useGetVotingPower'\r\nimport DetailsView from './CastVoteModal/DetailsView'\r\n\r\ninterface VoteDetailsModalProps extends InjectedModalProps {\r\n  block: number\r\n}\r\n\r\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\r\n    useGetVotingPower(block, modalIsOpen)\r\n  const { theme } = useTheme()\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {isLoading ? (\r\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Spinner size={80} />\r\n          </Flex>\r\n        ) : (\r\n          <>\r\n            <DetailsView\r\n              total={total}\r\n              cakeBalance={cakeBalance}\r\n              cakeVaultBalance={cakeVaultBalance}\r\n              cakePoolBalance={cakePoolBalance}\r\n              poolsBalance={poolsBalance}\r\n              cakeBnbLpBalance={cakeBnbLpBalance}\r\n            />\r\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\r\n              {t('Close')}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VoteDetailsModal\r\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\r\nimport {\r\n  AutoRenewIcon,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  Input,\r\n  LinkExternal,\r\n  Text,\r\n  useModal,\r\n} from '@pancakeswap/uikit'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport times from 'lodash/times'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useInitialBlock } from 'state/block/hooks'\r\nimport { SnapshotCommand } from 'state/types'\r\nimport useToast from 'hooks/useToast'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { signMessage } from 'utils/web3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport { DatePicker, TimePicker } from 'components/DatePicker'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport ReactMarkdown from 'components/ReactMarkdown'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport { sendSnapshotData, Message, generateMetaData, generatePayloadData } from '../helpers'\r\nimport Layout from '../components/Layout'\r\nimport { FormErrors, Label, SecondaryLabel } from './styles'\r\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\r\nimport { combineDateAndTime, getFormErrors } from './helpers'\r\nimport { FormState } from './types'\r\nimport { ADMINS, VOTE_THRESHOLD } from '../config'\r\nimport VoteDetailsModal from '../components/VoteDetailsModal'\r\n\r\nconst EasyMde = lazy(() => import('components/EasyMde'))\r\n\r\nconst CreateProposal = () => {\r\n  const [state, setState] = useState<FormState>({\r\n    name: '',\r\n    body: '',\r\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\r\n    startDate: null,\r\n    startTime: null,\r\n    endDate: null,\r\n    endTime: null,\r\n    snapshot: 0,\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const initialBlock = useInitialBlock()\r\n  const { push } = useHistory()\r\n  const { library } = useWeb3Provider()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\r\n  const formErrors = getFormErrors(state, t)\r\n\r\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const proposal = JSON.stringify({\r\n        ...generatePayloadData(),\r\n        type: SnapshotCommand.PROPOSAL,\r\n        payload: {\r\n          name,\r\n          body,\r\n          snapshot,\r\n          start: combineDateAndTime(startDate, startTime),\r\n          end: combineDateAndTime(endDate, endTime),\r\n          choices: choices\r\n            .filter((choice) => choice.value)\r\n            .map((choice) => {\r\n              return choice.value\r\n            }),\r\n          metadata: generateMetaData(),\r\n          type: 'single-choice',\r\n        },\r\n      })\r\n\r\n      const sig = await signMessage(library, account, proposal)\r\n\r\n      if (sig) {\r\n        const msg: Message = { address: account, msg: proposal, sig }\r\n\r\n        // Save proposal to snapshot\r\n        const data = await sendSnapshotData(msg)\r\n\r\n        // Redirect user to newly created proposal page\r\n        push(`/voting/proposal/${data.ipfsHash}`)\r\n\r\n        toastSuccess(t('Proposal created!'))\r\n      } else {\r\n        toastError(t('Error'), t('Unable to sign payload'))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), error?.message || error?.error)\r\n      console.error(error)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }))\r\n\r\n    // Keep track of what fields the user has attempted to edit\r\n    setFieldsState((prevFieldsState) => ({\r\n      ...prevFieldsState,\r\n      [key]: true,\r\n    }))\r\n  }\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { name: inputName, value } = evt.currentTarget\r\n    updateValue(inputName, value)\r\n  }\r\n\r\n  const handleEasyMdeChange = (value: string) => {\r\n    updateValue('body', value)\r\n  }\r\n\r\n  const handleChoiceChange = (newChoices: Choice[]) => {\r\n    updateValue('choices', newChoices)\r\n  }\r\n\r\n  const handleDateChange = (key: string) => (value: Date) => {\r\n    updateValue(key, value)\r\n  }\r\n\r\n  const options = useMemo(() => {\r\n    return {\r\n      hideIcons:\r\n        account && ADMINS.includes(account.toLowerCase())\r\n          ? []\r\n          : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\r\n    }\r\n  }, [account])\r\n\r\n  useEffect(() => {\r\n    if (initialBlock > 0) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        snapshot: initialBlock,\r\n      }))\r\n    }\r\n  }, [initialBlock, setState])\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <PageMeta />\r\n      <Box mb=\"48px\">\r\n        <Breadcrumbs>\r\n          <Link to=\"/\">{t('Home')}</Link>\r\n          <Link to=\"/voting\">{t('Voting')}</Link>\r\n          <Text>{t('Make a Proposal')}</Text>\r\n        </Breadcrumbs>\r\n      </Box>\r\n      <form onSubmit={handleSubmit}>\r\n        <Layout>\r\n          <Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"name\">{t('Title')}</Label>\r\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\r\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\r\n            </Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"body\">{t('Content')}</Label>\r\n              <Text color=\"textSubtle\" mb=\"8px\">\r\n                {t('Tip: write in Markdown!')}\r\n              </Text>\r\n              <EasyMde\r\n                id=\"body\"\r\n                name=\"body\"\r\n                onTextChange={handleEasyMdeChange}\r\n                value={body}\r\n                options={options}\r\n                required\r\n              />\r\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\r\n            </Box>\r\n            {body && (\r\n              <Box mb=\"24px\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <Heading as=\"h3\" scale=\"md\">\r\n                      {t('Preview')}\r\n                    </Heading>\r\n                  </CardHeader>\r\n                  <CardBody p=\"0\" px=\"24px\">\r\n                    <ReactMarkdown>{body}</ReactMarkdown>\r\n                  </CardBody>\r\n                </Card>\r\n              </Box>\r\n            )}\r\n            <Choices choices={choices} onChange={handleChoiceChange} />\r\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\r\n          </Box>\r\n          <Box>\r\n            <Card>\r\n              <CardHeader>\r\n                <Heading as=\"h3\" scale=\"md\">\r\n                  {t('Actions')}\r\n                </Heading>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"startDate\"\r\n                    onChange={handleDateChange('startDate')}\r\n                    selected={startDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"startTime\"\r\n                    onChange={handleDateChange('startTime')}\r\n                    selected={startTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"endDate\"\r\n                    onChange={handleDateChange('endDate')}\r\n                    selected={endDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"endTime\"\r\n                    onChange={handleDateChange('endTime')}\r\n                    selected={endTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\r\n                </Box>\r\n                {account && (\r\n                  <Flex alignItems=\"center\" mb=\"8px\">\r\n                    <Text color=\"textSubtle\" mr=\"16px\">\r\n                      {t('Creator')}\r\n                    </Text>\r\n                    <LinkExternal href={getBscScanLink(account, 'address')}>{truncateHash(account)}</LinkExternal>\r\n                  </Flex>\r\n                )}\r\n                <Flex alignItems=\"center\" mb=\"16px\">\r\n                  <Text color=\"textSubtle\" mr=\"16px\">\r\n                    {t('Snapshot')}\r\n                  </Text>\r\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\r\n                </Flex>\r\n                {account ? (\r\n                  <>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      width=\"100%\"\r\n                      isLoading={isLoading}\r\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n                      disabled={!isEmpty(formErrors)}\r\n                      mb=\"16px\"\r\n                    >\r\n                      {t('Publish')}\r\n                    </Button>\r\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\r\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\r\n                    </Text>\r\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\r\n                      {t('Check voting power')}\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Box>\r\n        </Layout>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CreateProposal\r\n","import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return ADMINS.includes(proposal.author.toLowerCase())\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: tokens.cake.address, decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnapshotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    let power = parseFloat(vote.metadata?.votingPower)\r\n\r\n    if (!power) {\r\n      power = 0\r\n    }\r\n\r\n    return accum + power\r\n  }, 0)\r\n}\r\n","export const PROPOSALS_TO_SHOW = 10\r\nexport const ADMINS = [\r\n  '0x842B508681eE336E74600974B4623B709477d29D', // TARO\r\n  '0x977e0c1005dff8749f8cac22f4df0bd5f013d1a7', // CHUNGUS\r\n  '0x6eaf1b33b8672c5dc40ab8f4ba3a0111723126c7', // HOPS\r\n].map((address) => address.toLowerCase())\r\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\r\nexport const SNAPSHOT_VERSION = '0.1.3'\r\nexport const PANCAKE_SPACE = 'cake.eth'\r\nexport const VOTE_THRESHOLD = 10\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const VotingBox = styled.div`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 12px;\r\n  display: flex;\r\n  height: 64px;\r\n  justify-content: space-between;\r\n  margin-bottom: 24px;\r\n  padding: 0 16px;\r\n`\r\n\r\nexport const ModalInner: React.FC<BoxProps> = (props) => {\r\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Layout = styled.div`\r\n  align-items: start;\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: minmax(0, 1fr);\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: 1fr 332px;\r\n  }\r\n`\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Text, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport { VotingBox, ModalInner } from './styles'\r\n\r\ninterface DetailsViewProps {\r\n  total: number\r\n  cakeBalance: number\r\n  cakeVaultBalance: number\r\n  cakePoolBalance: number\r\n  poolsBalance: number\r\n  cakeBnbLpBalance: number\r\n}\r\n\r\nconst DetailsView: React.FC<DetailsViewProps> = ({\r\n  total,\r\n  cakeBalance,\r\n  cakeVaultBalance,\r\n  cakePoolBalance,\r\n  poolsBalance,\r\n  cakeBnbLpBalance,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalInner mb=\"0\">\r\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\r\n        {t(\r\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\r\n        )}\r\n      </Text>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Overview')}\r\n      </Text>\r\n      <VotingBox>\r\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\r\n        <Text bold fontSize=\"20px\">\r\n          {formatNumber(total, 0, 3)}\r\n        </Text>\r\n      </VotingBox>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Your Cake Held Now')}\r\n      </Text>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Wallet')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakeBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Manual CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakePoolBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Auto CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakeVaultBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Other Syrup Pools')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(poolsBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('CAKE BNB LP')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakeBnbLpBalance, 0, 3)}</Text>\r\n      </Flex>\r\n    </ModalInner>\r\n  )\r\n}\r\n\r\nexport default DetailsView\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getActivePools } from 'utils/calls'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { getVotingPower } from '../helpers'\r\n\r\ninterface State {\r\n  verificationHash: string\r\n  cakeBalance: number\r\n  cakeVaultBalance: number\r\n  cakePoolBalance: number\r\n  poolsBalance: number\r\n  cakeBnbLpBalance: number\r\n  total: number\r\n}\r\n\r\nconst initialState: State = {\r\n  verificationHash: null,\r\n  cakeBalance: 0,\r\n  cakeVaultBalance: 0,\r\n  cakePoolBalance: 0,\r\n  poolsBalance: 0,\r\n  cakeBnbLpBalance: 0,\r\n  total: 0,\r\n}\r\n\r\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\r\n  const { account } = useWeb3React()\r\n  const [votingPower, setVotingPower] = useState(initialState)\r\n  const [isLoading, setIsLoading] = useState(!!account)\r\n\r\n  useEffect(() => {\r\n    const fetchVotingPower = async () => {\r\n      setIsLoading(true)\r\n\r\n      try {\r\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n        const eligiblePools = await getActivePools(blockNumber)\r\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\r\n        const {\r\n          cakeBalance,\r\n          cakeBnbLpBalance,\r\n          cakePoolBalance,\r\n          total,\r\n          poolsBalance,\r\n          cakeVaultBalance,\r\n          verificationHash,\r\n        } = await getVotingPower(account, poolAddresses, blockNumber)\r\n\r\n        if (isActive) {\r\n          setVotingPower((prevVotingPower) => ({\r\n            ...prevVotingPower,\r\n            verificationHash,\r\n            cakeBalance: parseFloat(cakeBalance),\r\n            cakeBnbLpBalance: parseFloat(cakeBnbLpBalance),\r\n            cakePoolBalance: parseFloat(cakePoolBalance),\r\n            poolsBalance: parseFloat(poolsBalance),\r\n            cakeVaultBalance: parseFloat(cakeVaultBalance),\r\n            total: parseFloat(total),\r\n          }))\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (account && isActive) {\r\n      fetchVotingPower()\r\n    }\r\n  }, [account, block, setVotingPower, isActive, setIsLoading])\r\n\r\n  return { ...votingPower, isLoading }\r\n}\r\n\r\nexport default useGetVotingPower\r\n"],"sourceRoot":""}